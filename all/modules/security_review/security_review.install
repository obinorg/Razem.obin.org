<?php
// $Id: security_review.install,v 1.1.2.1 2009/11/10 01:04:36 coltrane Exp $

/**
 * @file
 * Install file for security_review module creates security_review table.
 */

/**
 * Implementation of hook_install().
 */
function security_review_install() {
  drupal_install_schema('security_review');
}

/**
 * Implementation of hook_enable().
 */
function security_review_enable() {
  drupal_set_message(t('Security Review module enabled. You should first set the module access permissions at !link. Be sure to grant permissions to trusted users only as this module can show senstive site information.', array('!link' => l('admin/user/permissions', 'admin/user/permissions'))));
}

/**
 * Implementation of hook_schema().
 */
function security_review_schema() {
  $schema['security_review'] = array(
    'fields' => array(
      'namespace' => array(
        'type' => 'varchar',
        'length' => 160,
        'not null' => TRUE,
        'default' => '',
      ),
      'reviewcheck' => array(
        'type' => 'varchar',
        'length' => 160,
        'not null' => TRUE,
        'default' => '',
      ),
      'result' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'lastrun' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skip' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skiptime' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skipuid' => array(
        'type' => 'int',
        'default' => NULL
      ),
    ),
    'primary key' => array('namespace', 'reviewcheck'),
  );
  
  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function security_review_uninstall() {
  drupal_uninstall_schema('security_review');
  variable_del('security_review_untrusted_roles');
  variable_del('security_review_log');
}